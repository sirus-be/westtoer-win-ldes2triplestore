orchestrator:
  pipelines:
    - name: touristattractions
      description: "This pipeline will take members from IMJV, and send to an LDES server"
      input:
        name: Ldio:LdesClient
        config:
          urls:
            - https://ca-westtoer-ldes.bluesea-b3dcdb70.westeurope.azurecontainerapps.io/touristattractions
          sourceFormat: text/turtle
          keep-state: true
          state: sqlite
          sqlite:
            directory: touristattractions
          materialisation:
            enabled: true
          retries:
            enabled: true
            max: 10
            statuses-to-retry: 403, 404
      transformers:
        - name: "Ldio:SparqlConstructTransformer"
          config:
            query: "
            PREFIX dcmitype: <http://purl.org/dc/dcmitype/>
            PREFIX schema: <https://schema.org/>
 
            construct {
              ?product ?p ?oNotBlank .
              ?oNotBlank ?p2 ?o2NotBlank .
              ?o2NotBlank ?p3 ?o3NotBlank .
              ?o3NotBlank ?p4 ?o4NotBlank .
              ?o4NotBlank ?p5 ?o5NotBlank .
            }
            where {
              {
                ?product a dcmitype:Collection .
              }
              UNION
              {
                ?product a schema:TouristAttraction .
              }
 
              ?product ?p ?o .
              OPTIONAL {
                ?o ?p2 ?o2 .
                OPTIONAL {
                  ?o2 ?p3 ?o3 .
                  OPTIONAL {
                    ?o3 ?p4 ?o4 .
                    OPTIONAL {
                      ?o4 ?p5 ?o5 .
                    }
                  }
                }
              }
            
              BIND('https://data.westtoer.be/id/.well-known/genid/' as ?skolemBase)
              BIND(if(isBlank(?o) && !isLiteral(?o), URI(concat(?skolemBase, md5(concat(str(?product), str(?o))))), ?o) as ?oNotBlank)
              BIND(if(isBlank(?o2) && !isLiteral(?o2), URI(concat(?skolemBase, md5(concat(str(?product), str(?o2))))), ?o2) as ?o2NotBlank)
              BIND(if(isBlank(?o3) && !isLiteral(?o3), URI(concat(?skolemBase, md5(concat(str(?product), str(?o3))))), ?o3) as ?o3NotBlank)
              BIND(if(isBlank(?o4) && !isLiteral(?o4), URI(concat(?skolemBase, md5(concat(str(?product), str(?o4))))), ?o4) as ?o4NotBlank)
              BIND(if(isBlank(?o5) && !isLiteral(?o5), URI(concat(?skolemBase, md5(concat(str(?product), str(?o5))))), ?o5) as ?o5NotBlank)
            }
            "
      outputs:
        # - name: Ldio:ConsoleOut
        #   config:
        #     rdf-writer:
        #       content-type: application/n-quads
        - name: Ldio:RepositorySink
          config:
            sparql-host: http://rdf4j-server:8080/rdf4j-server
            repository-id: jena
            named-graph: urn:x-arq:DefaultGraph
            batch-size: 1
    - name: taxonomies
      description: "This pipeline will fetch the product types and tree taxonomies."
      input:
        name: Ldio:HttpInPoller
        config:
          url:
            - https://app-westtoerwin-prod.azurewebsites.net/api/v1/taxonomies/product-types
            - https://app-westtoerwin-prod.azurewebsites.net/api/v1/taxonomies/tree
            - https://sirus-be.github.io/westtoer-win-ldes2triplestore/taxonomies/toeristische-regios.jsonld
          cron: "*/60 * * * * *"
        adapter:
          name: Ldio:JsonToLdAdapter
          config:
            context: |
              {
                "@context": {
                  "@base": "https://data.westtoer.be/id/concepts/",
                  "id": "@id",
                  "skos": "http://www.w3.org/2004/02/skos/core#",
                  "label": {
                      "@id": "skos:prefLabel",
                      "@language": "nl"
                  },
                  "items": "skos:narrower",
                  "labelDutch": {
                      "@id": "label",
                      "@language": "nl"
                  },
                  "labelEnglish": {
                      "@id": "label",
                      "@language": "en"
                  },
                  "labelFrench": {
                      "@id": "label",
                      "@language": "fr"
                  },
                  "labelGerman": {
                      "@id": "label",
                      "@language": "de"
                  }
                }
              }
      transformers:
        - name: "Ldio:SparqlConstructTransformer"
          config:
            query: "
              PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
              CONSTRUCT {
                ?s ?p ?o .
                ?s a skos:Concept .
              } WHERE {
                ?s ?p ?o .
              }
            "
      outputs:
        # - name: Ldio:ConsoleOut
        - name: Ldio:RepositorySink
          config:
            sparql-host: http://rdf4j-server:8080/rdf4j-server
            repository-id: jena
            named-graph: urn:x-arq:DefaultGraph
            batch-timeout: 10000
